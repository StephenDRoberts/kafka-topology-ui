[{"/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/index.tsx":"1","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/reportWebVitals.ts":"2","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/App.tsx":"3","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/Canvas.tsx":"4","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/components/class-application.tsx":"5","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/components/kafka-topic.tsx":"6"},{"size":500,"mtime":1608304878460,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608304878462,"results":"9","hashOfConfig":"8"},{"size":1375,"mtime":1608724854638,"results":"10","hashOfConfig":"8"},{"size":306,"mtime":1608310261947,"results":"11","hashOfConfig":"8"},{"size":578,"mtime":1608724497689,"results":"12","hashOfConfig":"8"},{"size":982,"mtime":1608732503681,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1j5db7f",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/index.tsx",[],["30","31"],"/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/reportWebVitals.ts",[],"/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/App.tsx",["32","33","34","35","36"],"import React, { useEffect, useRef } from 'react';\nimport logo from './logo.svg';\nimport * as d3 from 'd3';\nimport './App.css';\nimport ClassApplication from './canvas/components/class-application';\nimport KafkaTopic from './canvas/components/kafka-topic';\n\nconst DATA = [1]\n\n// const createD3Element = (ref: { current: any; }) => {\n//   const h = \"100vh\";\n//   const w = \"100vw\";\n\n//   const svg = d3.select(ref.current)\n//                 .append(\"svg\")\n//                 .attr(\"width\", w)\n//                 .attr(\"height\", h)\n                \n  \n//   svg.selectAll('rect')\n//     .data(DATA)\n//     .enter()\n//     .append('rect')\n//     .attr(\"width\", 25)\n//     .attr(\"height\", (d) => 30 * d)\n//     .attr('y', 50)\n//     .attr('fill', 'navy')\n\n// }\n\nfunction App() {\n\n  // const myRef = useRef(null)\n\n  // useEffect(() => { \n  //   createD3Element(myRef)\n  // },[])\n\n  const props1 = {\n    x: 50,\n    y: 50,\n    fill: \"navy\"\n  }\n\n\n  const props2 = {\n    x: 250,\n    y: 100,\n    fill: \"pink\"\n  }\n\n  const kafkaTopicProps = {\n    cx: 500,\n    cy: 100\n  }\n\n  return (\n    <div className=\"App\">\n      \n      {/* <div ref={ myRef }></div> */}\n      <svg height={\"100vh\"} width={\"100vw\"} >\n        <ClassApplication props={props1} />\n        <ClassApplication props={props2}/>\n        <KafkaTopic props={kafkaTopicProps}/>\n      </svg>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/Canvas.tsx",[],["37","38"],"/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/components/class-application.tsx",["39"],"\ninterface ClassApplicationProp { \n    props: ClassApplicationProps\n}\n\ninterface ClassApplicationProps { \n    x: number,\n    y: number,\n    fill: string,\n    // width: number,\n    // height: number\n}\nconst ClassApplication = (props: ClassApplicationProp) => { \n    const { x, y, fill } = props.props\n\n    return (\n        <g>        \n            <rect x={x} y={y} fill={\"white\"} width={120} height={80} stroke={\"black\"} stroke-linecap={\"butt\"}></rect>\n            <text x={x} y={y - 15} >Class Application</text>            \n        </g>\n    )\n}\n\nexport default ClassApplication","/Users/sro01/Documents/002_PersonalCode/kakfa-topology-ui/src/canvas/components/kafka-topic.tsx",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":34},{"ruleId":"46","severity":1,"message":"51","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":12},{"ruleId":"46","severity":1,"message":"52","line":3,"column":13,"nodeType":"48","messageId":"49","endLine":3,"endColumn":15},{"ruleId":"46","severity":1,"message":"53","line":8,"column":7,"nodeType":"48","messageId":"49","endLine":8,"endColumn":11},{"ruleId":"42","replacedBy":"54"},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","severity":1,"message":"56","line":14,"column":19,"nodeType":"48","messageId":"49","endLine":14,"endColumn":23},{"ruleId":"46","severity":1,"message":"57","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":39},{"ruleId":"46","severity":1,"message":"58","line":1,"column":41,"nodeType":"48","messageId":"49","endLine":1,"endColumn":52},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'logo' is defined but never used.","'d3' is defined but never used.","'DATA' is assigned a value but never used.",["59"],["60"],"'fill' is assigned a value but never used.","'createExternalModuleReference' is defined but never used.","'createYield' is defined but never used.","no-global-assign","no-unsafe-negation"]